package ch.epfl.rechor.timetable.mapped;


import org.junit.jupiter.api.Test;

import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HexFormat;
import java.util.List;

import static ch.epfl.rechor.timetable.mapped.Structure.FieldType.U16;
import static ch.epfl.rechor.timetable.mapped.Structure.field;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class MyStructureTest {


    @Test
    void testStructureStations() {

        List<String> stringStationList = new ArrayList<>();
        stringStationList.add("  ");
        stringStationList.add("  ");
        stringStationList.add("  ");
        stringStationList.add("  ");
        stringStationList.add("Lausanne");
        stringStationList.add("  ");
        stringStationList.add("Zurich");

        byte[] tableauBytes = {0x00, 0x04, 0x04, (byte) 0xb6, (byte) 0xca, 0x14, 0x21, 0x14, 0x1f, (byte) 0xa1, 0x00, 0x06, 0x04, (byte) 0xdc, (byte) 0xcc, 0x12, 0x21, 0x18, (byte) 0xda, 0x03};
        ByteBuffer buffer = ByteBuffer.wrap(tableauBytes);


        BufferedStations stations = new BufferedStations(stringStationList, buffer);
        assertEquals(stations.name(0), "Lausanne");
        assertEquals(stations.name(1), "Zurich");
        assertEquals(stations.latitude(0), 46.5167919639498);
        assertEquals(stations.latitude(1), 46.54276396147907);
        assertEquals(stations.longitude(0), 6.629091985523701);
        assertEquals(stations.longitude(1), 6.837874967604876);
        assertEquals(stations.size(), 2);
    }

    @Test
    void myStationsFrenchGamingTest_CE() {
        HexFormat hexFormat = HexFormat.ofDelimiter(" ");
        byte[] bytes = hexFormat.parseHex("00 04 04 b6 ca 14 21 14 1f a1 00 06 04 dc cc 12 21 18 da 03 01 43 00 0a d4 e8 b0 c9 ad ef");
        // 00 0a d4 e8 = 709864 = 0.059500113129615784;
        // b0 c9 ad ef = 2966007279 = 248.6078581865876913;
        ByteBuffer bytesBuffer = ByteBuffer.wrap(bytes);

        List<String> stringStationList = new ArrayList<String>(Arrays.asList("kdfsk", "efz", "1", "70", "Anet", "Ins", "Lausanne", "Losanna",
                "Palezieux", "Poutschidi", "PipiPow", "scoubididou", "dripaw",
                "20 All√©e des cramt√©s", "12", "Skibbidi gare", "train de vie",
                "ü¶ï", "Norman Thavaux", "PolyRat", "les fesses d'Augustin",
                "95 Avenue Apagnan", "QuoicouBoulevard",

                // Noms absurdes
                "Gare de la Cramtance", "Tunnel du Rat Crev√©", "St-Honorin-les-Chips",
                "Place du Yippee", "Impasse du ScoubiSnack", "Pont du TurboFlemmard",
                "Rue de la Friteuse", "Station McFlurry", "Arr√™t KFC de l‚ÄôApocalypse",
                "Bordelais-les-Saucisses", "Cul-de-sac de la Schlagance",

                // Surnoms absurdes
                "Jean-Miche-Moi", "Tonton Flingueur", "M√©m√© Turbo", "Le Rat P√™cheur",
                "Sauciflard le Grand", "Ma√Ætre Boulard", "El Chipiron", "G√©g√© la D√©brouille",
                "Papy Braquage", "Mamie Beretta", "Didier La Chaussette", "K√©k√© Nitro",
                "Tata Mojito", "Jojo les Tongs", "Bertrand Canicule",

                // Lieux absurdes
                "Rond-Point du Yolo", "√âchangeur des Quoicoubeh", "Avenue du Dab",
                "Cit√© des Enfants Perdus (et Bourr√©s)", "HLM des Champions",
                "Zone Industrielle des Rat√©s", "Jardin Public des D√©pressifs",
                "Aire de Repos 'La Sieste √âternelle'", "Boulevard du Frisson",

                // Trucs d‚Äôinternet
                "LOL City", "VroumVroumVille", "Ratio Town", "NoSkillLand",
                "Mdrlavideo", "SansSoucis.exe", "CerveauLag.com", "NoName99",
                "KarmaZone", "Trollinette-sur-Loire", "Genshin-Village",
                "Osu!Land", "Fortnite-les-Bains", "Skibidi-Hall",

                // Noms inspir√©s de vrais endroits, remix√©s
                "Montparnasse-les-Piges", "RER ZZZ", "Marseille-sur-Boue",
                "Toulouse-les-Bras-Cass√©s", "Orl√©ans-la-Peuf", "Lille-la-Flemme",
                "Strasbourg-dans-l'Ombre", "Gare de Saint-Malod√©", "Valence-la-Goudronn√©e",

                // Plus de surnoms et de brainrot fran√ßais
                "Titi Turbo", "Grand-M√®re Crameuse", "B√©bert l‚ÄôIncroyable",
                "Chabichou-de-Combat", "Nico le Malin", "D√©d√© Dynamite",
                "P√©pito Bang Bang", "Francis le Taximan", "Raoul la Grosse Patate",
                "La Mouette du 93", "Poussin Frapp√©", "Momo Bagarre",
                "Jacky Nitro", "Patapouf Gangsta", "Jojo Racaillou",

                // R√©f√©rences et d√©lires
                "Baguettosaurus Rex", "FromageLand", "Cordon Bleu City",
                "Tacos M√©gablast", "Camembert-sur-Seine", "Croque-Monsieur Beach",
                "Vin Rouge-Les-Bains", "Pain Perdu Ville", "Omelette-du-Fromage-Central",
                "GigaCh√®vre 3000", "Le Bifteck Mystique", "La Buvette des Enfers",

                // Ajout de brainrot complet
                "P√©pin le Radis", "Cl√©mentine l‚Äô√âclair", "Capitaine Raclette",
                "Zizou des Abysses", "Dudu le Pendu", "K√©vin TurboFlex",
                "Cacahu√®te Sauvage", "Le Big Mac √âgar√©", "Tonton Cactus",
                "Papy Boomer Max", "Jean-Miche-Rienafaire", "Didou le Fourbe",
                "Les Nuggets du Turfu", "M. Mouette", "Titi Tofu",
                "Le Rat Lucide", "Grand Chef Chaussette", "L‚ÄôEmpereur du Picon",

                // √âmojis random et brainrot maximal
                "üî• Gare du Feu", "üåä Plage des Vagues Fatigu√©es", "ü¶Ü CoinCoin-Les-Bains",
                "ü¶Ñ Licorneville", "üê¢ L‚ÄôAutoroute du Speedrun", "ü§° Cirque du Brainrot",
                "üé© Monsieur El√©gance", "üçï Pizza-les-Flots", "üöÄ Fus√©e Turbo",
                "üå≠ Hot-Dog City", "üê∏ Rainette-sur-Marne", "ü•ñ Tradition-sur-Seine",

                // Continue jusqu'√† 400...
                "Tramway du Malaise", "Panneau Stop de l‚ÄôEnfer", "Raccourci des L√©gendes",
                "Gare des √¢mes en peine", "Passage des Tunnels sans Fin", "P√©p√®reland",
                "M√©tro Bizarre", "V√©lo-√âclair", "P√©riph‚Äô des Damn√©s", "Rond-Point du Doute",
                "Pont de la Ch√®vre Perdue", "Autoroute de la Patate Chaude",
                "Porte des P√©pitos", "Bretelle de la Sieste", "Route du Nutella D√©vers√©",

                "La Maison qui Marche", "Boulevard des Crocs Mortels", "La Rue du Pourquoi",
                "Vortex du McDo", "Parking de la D√©solation", "Place du Wesh",
                "Gouffre de l‚ÄôInd√©cision", "All√©e des Fant√¥mes Fatigu√©s",

                "Sac √† dos Sentimental", "Tartiflette Sauvage", "La Ruelle des Croissants",
                "La For√™t des Incompr√©hensions", "Gare de la Sauce Blanche",

                "Borne d‚ÄôArcade du Destin", "La Brasserie du Frometon",
                "Caf√© des √Çmes Perdues", "Snack du Vide √âmotionnel", "Kebab des Champions",
                "GigaBuvette 2000", "Caverne du Barbecue Ultime",

                "M√©tro Ligne 404", "Arr√™t de Bus des Mots Perdus", "TGV vers l‚ÄôInconnu",
                "Train Intergalactique", "TER de la Maldance", "Gare des Rat√©s",
                "Autoroute des Gens Louches", "Station des P√©pettes √âgar√©es",
                "P√©riph√©rique du Doute", "Boulevard des AirPods Perdus",
                "Route des Chaussettes Trou√©es", "Impasse du Croque-Monsieur",
                "Chemin des Frites Sombres", "Pont du Dropkick", "Esplanade du Poulet Frit",

                "D√©dale du Wesh", "Sentier du Jean-Michel", "Station WTF", "Rond-Point de l‚ÄôAbsurde",


                // Stations du Chaos
                "Gare de la Maldance", "Station des √Çmes Perdues", "Tunnel du Fond du Gouffre",
                "Impasse de la Derni√®re Chance", "Route du Zbeul Infini", "Chemin de Traverse des Rat√©s",
                "Station Sans Issue", "RER du Malaise", "Avenue de la Sauce Blanche",
                "Autoroute des Clowns Tristes", "Bretelle de l‚ÄôIncompr√©hension",
                "Station du D√©bat √âternel", "Arr√™t de Bus de la R√©flexion Tardive",

                // Rues et avenues de l'absurde
                "Rue des Crocs Morts", "Avenue du Turfu Sombre", "Boulevard du Croissant D√©pressif",
                "Impasse des Clowns Fatigu√©s", "Rond-Point du PLS", "Pont de la M√©lancolie Joyeuse",
                "All√©e des P√©pettes Perdues", "Rue de la Ch√®vre Foudroy√©e",
                "Chemin du Rat Lucide", "Rond-Point des P√©pitos Tomb√©s",

                // Surnoms absurdes & personnages mystiques
                "Jojo Sauciflard", "Didier PLS", "Raoul le Turbo", "Jean-Michel D√©sastre",
                "Bernard Sauce Blanche", "Tonton Fumier", "Jacky Deux Vitesses",
                "P√©p√© Traquenard", "Mamie Javel", "Francis la Peur",
                "K√©k√© la D√©tresse", "Dudu la Semelle", "Chico Mal√©fique",
                "Jean-K√©vin le D√©√ßu", "P√©pito Gargantua", "Momo Charcuterie",
                "Serge la Frite", "G√©g√© TurboFlemme", "Patrick D√©sint√©gr√©",

                // Lieux du Chaos
                "Snack du Vide √âmotionnel", "Cimeti√®re des Croissants Perdus",
                "Bistrot du Fromage D√©chu", "Brasserie du Grand D√©ni",
                "La Buvette des √Çmes S√®ches", "Kebab du Dernier Espoir",
                "McDo du Jugement Dernier", "Caf√© de la Giga-Racl√©e",
                "Brasserie des P√©pis", "Auberge des Champions D√©chus",

                // Brainrot ultime
                "Forteresse du Zbeul", "Tour de la Maldance", "Citadelle du Yippee",
                "D√©dale du Jean-Michel", "Labyrinthe du Scoubididou",
                "Cave des Croutons", "Donjon de la Raclette",
                "Plage des Cornichons Tristes", "Volcan de la D√©faite",

                // √âmojis et absurdit√©s visuelles
                "ü¶Ü CoinCoin-Plage", "üî• Gare du Braquage", "üíÄ Rond-Point du Non-Retour",
                "üõë Stop-les-D√©g√¢ts", "üöÄ Fus√©e TurboFlex", "üé≠ Th√©√¢tre du Scandale",
                "ü•ñ Tradiland", "üßÄ Camembert-Sur-Terre", "ü•§ Fontaine de l'Orangina Sacr√©",
                "üìâ Cours du Bitcoin Effondr√©", "üëÄ Station du Regard Pesant",

                // Noms de bouffe remix√©s
                "P√¥le Nord du Tacos", "Antarctique du Kebab", "Archipel du Gratin Dauphinois",
                "Fronti√®re du McBaguette", "Lac du Nutella Renvers√©",
                "√éle du Croque-Monsieur Perdu", "Toundra du Camembert",
                "D√©sert du Curry-Dinde", "Pic de la Fondue Noire", "Vall√©e du Big Mac Sacr√©",

                // Transports de la Maldance
                "M√©tro Ligne 666", "Tramway de la Faucheuse", "Funiculaire du PLS",
                "TGV de l'Angoisse", "Train de la Nuit Sans Fin", "Navette Spatiale du Doute",
                "Bus de la D√©ch√©ance", "Scooter des Enfers", "P√©niche du Mal Aigu",
                "Chemin de Fer des Fesses d'Augustin",

                // D√©lire complet
                "Temple des Rats Perch√©s", "Carrefour des √ânergies Basses",
                "Hall du Burnout", "Stade des Petits Bras", "Parking du Grand Non",
                "Biblioth√®que des TikTok Perdus", "Mus√©e du Dernier Mouvement",
                "Grotte du Dernier Fromage", "Mar√©cage du Malaise Chronique",
                "P√¢tisserie des √Çmes Errantes",

                // Titre et surnoms de champions du malaise
                "Baron de la Chaussette Solitaire", "Empereur du Pain Rassi",
                "Duc de la Flemme Universelle", "Seigneur du Jambon Perdu",
                "Comte du Saucisson Disparu", "G√©n√©ral du Plateau de Fromage",
                "Archiduc de la Ratitude", "Prince du Dernier Noyau d‚ÄôOlive",

                // Encore plus de lieux absurdes
                "For√™t des Cornichons Mystiques", "Canyon des Peignoirs Fatigu√©s",
                "Jungle des Tupperwares Perdus", "D√©sert des Gens qui Promettent de Rappeler",
                "√éle des Codes Wifi Disparus", "Lac du Silure Sacr√©",
                "Mer du Gras Infinie", "P√©ninsule de la Chaise Qui Grince",

                // Derniers √©tages du brainrot
                "Sommet du Slip Perdu", "Crique des Rayures Inutiles",
                "Tunnel des Talons Qui Claquent", "Autoroute du Ralenti",
                "Pont des Pav√©s Mouill√©s", "Immeuble des Gens Qui Parlent Trop Fort",
                "Rivi√®re du Mauvais Timing", "Bois du SMS Non R√©pondu",

                // Bonus TurboGoofy
                "Gare des Portes Qui Coincent", "Station de l'Imprimante R√©volt√©e",
                "Terminal des Ongles Cass√©s", "Aire de Repos des Chaussures Mal Lac√©es",
                "Rond-Point de l‚ÄôAllergie Surprise", "Kebab de l‚ÄôH√©sitation",
                "Snack de l‚ÄôInconnu", "P√¥le Emploi du Fayotage Rat√©",
                "Grotte du Silence Pesant", "Jardin des Barbecue Maudits"));
        System.out.println(stringStationList.size());
        BufferedStations stations = new BufferedStations(stringStationList, bytesBuffer);
        assertEquals(stations.name(2), (stringStationList.get(323)));
        assertEquals(stations.longitude(2), 0.059500113129615784);
        assertEquals(stations.latitude(2), -111.39214181341231);
    }

    static public byte[] toByte(int[] xs) {
        byte[] res = new byte[xs.length];
        for (int i = 0; i < xs.length; i++) {
            res[i] = (byte) xs[i];
        }
        return res;
    }


    @Test
    void givenExempleBd() {
        List<String> stringTable = new ArrayList<>();
        stringTable.add("1");
        stringTable.add("70");
        stringTable.add("Anet");
        stringTable.add("Ins");
        stringTable.add("Lausanne");
        stringTable.add("Losanna");
        stringTable.add("Pal√©zieux");


        int[] stationsByteAsInt = {0x00, 0x04, 0x04, 0xb6, 0xca, 0x14, 0x21, 0x14, 0x1f, 0xa1, 0x00, 0x06, 0x04, 0xdc, 0xcc, 0x12, 0x21, 0x18, 0xda, 0x03};
        byte[] stationsByte = toByte(stationsByteAsInt);
        ByteBuffer stationsByteBuffer = ByteBuffer.wrap(stationsByte);
        BufferedStations bufferedStations = new BufferedStations(stringTable, stationsByteBuffer);


        assertEquals(2, bufferedStations.size());
        assertEquals("Lausanne", bufferedStations.name(0));
        assertEquals("Pal√©zieux", bufferedStations.name(1));
        assertEquals(6.629092, bufferedStations.longitude(0), 0.001);
        assertEquals(6.837875, bufferedStations.longitude(1), 0.001);
        assertEquals(46.516792, bufferedStations.latitude(0), 0.001);
        assertEquals(46.542764, bufferedStations.latitude(1), 0.001);
    }


    public static ByteBuffer byteBufferOfLength(int n) {
        int[] aliasesByteAsInt = new int[n];
        byte[] aliasesByte = toByte(aliasesByteAsInt);
        return ByteBuffer.wrap(aliasesByte);
    }






    @Test
    void testSizeStationsBd() {
        List<String> stringTable = new ArrayList<>();
        stringTable.add("1");
        stringTable.add("70");
        stringTable.add("Anet");
        stringTable.add("Ins");
        stringTable.add("Lausanne");
        stringTable.add("Losanna");
        stringTable.add("Pal√©zieux");


        int bytePerUnit = 10;
        for (int i = 0; i < 100; i++) {
            ByteBuffer byteBuffer = byteBufferOfLength(i * bytePerUnit);
            BufferedStations bufferedStations = new BufferedStations(stringTable, byteBuffer);
            assertEquals(i, bufferedStations.size());
        }
    }




    @Test
    void testInvalidLengthStationsBd() {
        List<String> stringTable = new ArrayList<>();
        stringTable.add("1");
        stringTable.add("70");
        stringTable.add("Anet");
        stringTable.add("Ins");
        stringTable.add("Lausanne");
        stringTable.add("Losanna");
        stringTable.add("Pal√©zieux");


        int bytePerUnit = 10;
        for (int i = 0; i < 100; i++) {
            for (int j = 1; j < bytePerUnit; j++) {
                ByteBuffer byteBuffer = byteBufferOfLength(i * bytePerUnit + j);
                assertThrows(IllegalArgumentException.class, () -> {
                    BufferedStations bufferedStations = new BufferedStations(stringTable, byteBuffer);
                });
            }
        }
    }




    @Test
    void testNameGettersStationsBd() {
        int n = 100;
        List<String> stringTable = new ArrayList<>();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; i++) {
            sb.append("yolo");
            stringTable.add(sb.toString());
        }


        int bytePerUnit = 10;
        int offset = 1;
        for (int i = 0; i < n; i++) {
            int[] byteAsInt = new int[i * bytePerUnit];
            for (int j = 0; j < i; j++) {
                byteAsInt[j * bytePerUnit + offset] = j;
            }
            byte[] aliasesByte = toByte(byteAsInt);
            ByteBuffer byteBuffer = ByteBuffer.wrap(aliasesByte);


//            System.out.println(Arrays.toString(aliasesByte));


            BufferedStations bufferedStations = new BufferedStations(stringTable, byteBuffer);
            for (int j = 0; j < i; j++) {
//                System.out.printf("here's my j: %d; size: %d\n", j, bufferedStations.size());
                assertEquals(stringTable.get(j), bufferedStations.name(j));
            }
        }
    }
    @Test
    void testFieldWithNoFieldType(){
        assertThrows(NullPointerException.class, () -> field(1, null));
    }


    @Test
    void testSize(){
        Structure.Field field1 = field(0, Structure.FieldType.U8);
        Structure.Field field2 = field(1, Structure.FieldType.U16);
        Structure.Field field3 = field(2, Structure.FieldType.S32);
        Structure structure = new Structure(field1, field2, field3);
        assertEquals(1 + 2 + 4, structure.totalSize());
    }


    @Test
    void testInvalidIndex(){
        Structure.Field field1 = field(0, Structure.FieldType.U8);
        Structure.Field field2 = field(1, Structure.FieldType.U16);
        Structure.Field field3 = field(2, Structure.FieldType.S32);
        Structure structure = new Structure(field1, field2, field3);
        assertThrows(IndexOutOfBoundsException.class, ()-> structure.offset(-1, 3));
        assertThrows(IndexOutOfBoundsException.class, ()-> structure.offset(3, (structure.totalSize()+1)));
        assertThrows(IndexOutOfBoundsException.class, ()-> structure.offset(3, -1));
    }


    @Test
    void testUnorderedFields(){
        Structure.Field field1 = field(0, Structure.FieldType.U8);
        Structure.Field field2 = field(1, Structure.FieldType.U16);
        Structure.Field field3 = field(2, Structure.FieldType.S32);
        assertThrows(IllegalArgumentException.class, ()-> new Structure(field1, field3, field2));
    }


    @Test
    void testValidOffSet() {
        Structure.Field f1 = new Structure.Field(0, Structure.FieldType.U8);
        Structure.Field f2 = new Structure.Field(1, Structure.FieldType.U16);
        Structure structure = new Structure(f1, f2);


        assertEquals(0, structure.offset(0, 0));
        assertEquals(1, structure.offset(1, 0));
    }


    }
